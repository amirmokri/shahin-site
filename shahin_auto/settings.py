"""
Django settings for shahin_auto project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-your-secret-key-here-change-in-production'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.flatpages',
    'rest_framework',
    'corsheaders',
    'main',
    'storages',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'shahin_auto.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'shahin_auto.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'shahin_db',
        'USER': 'root',
        'PASSWORD': '232330scmj',
        'HOST': 'localhost',
        'PORT': '3306',
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}

# Using mysqlclient for MySQL database connection


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'fa-ir'

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Sites framework
SITE_ID = 1

# Robots.txt settings
ROBOTS_USE_SITEMAP = True
ROBOTS_SITEMAP_URLS = [
    '/sitemap.xml',
]

# Storage settings (Arvan/Hamravesh S3-compatible; enable only if needed in dev)
USE_S3 = os.getenv('USE_S3', 'False').lower() == 'true'

if USE_S3:
    ARVAN_ACCESS_KEY_ID = os.getenv('ARVAN_ACCESS_KEY_ID') or os.getenv('AWS_ACCESS_KEY_ID')
    ARVAN_SECRET_ACCESS_KEY = os.getenv('ARVAN_SECRET_ACCESS_KEY') or os.getenv('AWS_SECRET_ACCESS_KEY')
    ARVAN_BUCKET_NAME = os.getenv('ARVAN_BUCKET_NAME') or os.getenv('AWS_STORAGE_BUCKET_NAME')
    ARVAN_REGION = os.getenv('ARVAN_REGION', 'ir-thr-at1') or os.getenv('AWS_S3_REGION_NAME', 'ir-thr-at1')
    ARVAN_ENDPOINT_URL = os.getenv('ARVAN_ENDPOINT_URL') or os.getenv('AWS_S3_ENDPOINT_URL')
    ARVAN_ADDRESSING_STYLE = os.getenv('ARVAN_ADDRESSING_STYLE', os.getenv('AWS_S3_ADDRESSING_STYLE', 'virtual'))
    ARVAN_CUSTOM_DOMAIN = os.getenv('ARVAN_CUSTOM_DOMAIN') or os.getenv('AWS_S3_CUSTOM_DOMAIN')
    ARVAN_SIGNATURE_VERSION = os.getenv('ARVAN_SIGNATURE_VERSION', 's3v4')

    AWS_ACCESS_KEY_ID = ARVAN_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY = ARVAN_SECRET_ACCESS_KEY
    AWS_STORAGE_BUCKET_NAME = ARVAN_BUCKET_NAME
    AWS_S3_REGION_NAME = ARVAN_REGION
    AWS_S3_ENDPOINT_URL = ARVAN_ENDPOINT_URL
    AWS_S3_ADDRESSING_STYLE = ARVAN_ADDRESSING_STYLE
    AWS_S3_CUSTOM_DOMAIN = ARVAN_CUSTOM_DOMAIN
    AWS_S3_SIGNATURE_VERSION = ARVAN_SIGNATURE_VERSION

    AWS_DEFAULT_ACL = 'public-read'
    AWS_QUERYSTRING_AUTH = False
    AWS_S3_FILE_OVERWRITE = False
    AWS_S3_OBJECT_PARAMETERS = {
        'CacheControl': 'max-age=86400',
    }

    if not AWS_S3_CUSTOM_DOMAIN and AWS_S3_ENDPOINT_URL:
        _endpoint = AWS_S3_ENDPOINT_URL.replace('https://', '').replace('http://', '').rstrip('/')
        AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.{_endpoint}'

    # Use custom storage backends for better control
    DEFAULT_FILE_STORAGE = 'main.storage_backends.MediaStorage'
    STATICFILES_STORAGE = 'main.storage_backends.StaticStorage'

    if AWS_S3_CUSTOM_DOMAIN:
        STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/static/'
        MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/media/'
    else:
        base = AWS_S3_ENDPOINT_URL.rstrip('/') if AWS_S3_ENDPOINT_URL else ''
        STATIC_URL = f'{base}/{AWS_STORAGE_BUCKET_NAME}/static/'
        MEDIA_URL = f'{base}/{AWS_STORAGE_BUCKET_NAME}/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django Rest Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

# CORS settings
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]

CORS_ALLOW_CREDENTIALS = True

# Email settings (for contact form)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'your-email@gmail.com'
EMAIL_HOST_PASSWORD = 'your-app-password'

# Security settings
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'

# Session settings
SESSION_COOKIE_AGE = 3600  # 1 hour
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# Login/Logout URLs
LOGIN_URL = '/admin/login/'
LOGIN_REDIRECT_URL = '/admin/'
LOGOUT_REDIRECT_URL = '/'

# Cache settings
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}